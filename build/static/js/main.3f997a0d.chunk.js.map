{"version":3,"sources":["components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","components/Notification.jsx","services/persons.jsx","App.js","index.js"],"names":["Filter","change","onChange","PersonForm","props","add","nameChange","numberChange","newName","newNumber","onSubmit","value","type","Persons","persons","filter","deletePerson","person","name","match","RegExp","sort","a","b","id","map","number","onClick","Notification","message","err","className","baseUrl","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","errorStatus","setErrorStatus","useEffect","axios","get","then","response","data","initialNotes","event","target","preventDefault","setTimeout","some","window","confirm","oldObj","find","updatedPerson","newObject","url","concat","put","res","updatePerson","returnedPerson","newArr","catch","error","obj","post","returnedData","console","log","delete","status","deletePersonFromDb","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAUeA,EARA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,qDACsB,uBAAOC,SAAUD,QCkBhCE,EArBI,SAACC,GAAW,IACnBC,EAIcD,EAJdC,IACAC,EAGcF,EAHdE,WACAC,EAEcH,EAFdG,aACAC,EACcJ,EADdI,QACAC,EAAcL,EAAdK,UACR,OACI,uBAAMC,SAAUL,EAAhB,UACI,yCACM,uBAAOH,SAAUI,EAAYK,MAAOH,OAE1C,2CACQ,uBAAON,SAAUK,EAAcI,MAAOF,OAE9C,8BACA,wBAAQG,KAAK,SAAb,uBCAGC,EAfC,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,QAAQC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAC9B,OACI,8BACKF,EAAQC,QAAO,SAAAE,GAAM,OACtBA,EAAOC,KAAKC,MAAM,IAAIC,OAAOL,EAAQ,SACnCM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,GAAKD,EAAEC,MAAIC,KAAI,SAAAR,GAAM,OACpC,gCACI,8BAAIA,EAAOC,KAAX,IAAkBD,EAAOS,UACzB,wBAAQC,QAAS,kBAAMX,EAAaC,IAApC,sBAFQA,EAAOO,UCKpBI,G,MAXM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC7B,MAAgB,KAAZD,EACO,KAGP,qBAAKE,UAAWD,EAAM,QAAU,UAAhC,SACKD,M,gBCPPG,EAAU,eC+HDC,EAzHH,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACNpB,EADM,KACGqB,EADH,OAEkBD,mBAAS,IAF3B,mBAEN1B,EAFM,KAEG4B,EAFH,OAGqBF,mBAAS,IAH9B,mBAGNzB,EAHM,KAGK4B,EAHL,OAIeH,mBAAS,IAJxB,mBAINnB,EAJM,KAIEuB,EAJF,OAKiBJ,mBAAS,IAL1B,mBAKNL,EALM,KAKGU,EALH,OAM0BL,oBAAS,GANnC,mBAMNM,EANM,KAMOC,EANP,KAQdC,qBAAU,WDXMC,IAAMC,IAAIZ,GACXa,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QCWrBF,MAAK,SAAAG,GACjBb,EAAWa,QAEjB,IAgGJ,OACE,gCACI,cAAC,EAAD,CAAcnB,QAASA,EAASC,IAAKU,IACrC,2CACA,cAAC,EAAD,CAAQvC,OA1Fe,SAACgD,GACxBX,EAAUW,EAAMC,OAAOvC,UA0FvB,kDACA,cAAC,EAAD,CAAYN,IAxFE,SAAC4C,GAEnB,GADAA,EAAME,iBACO,KAAV3C,GAA4B,KAAZC,EACfgC,GAAe,GACfF,EAAW,iDACXa,YAAW,WACPb,EAAW,IACXE,GAAe,KAChB,UAEF,GAAI3B,EAAQuC,MAAK,SAACpC,GAAD,OAAYA,EAAOC,OAASV,MA2B9C,GAAG8C,OAAOC,QAAP,UAAkB/C,EAAlB,2EAAoG,CACnG,IAAMgD,EAAS1C,EAAQ2C,MAAK,SAAAxC,GAAM,OAAIA,EAAOC,OAASV,KAChDkD,EAAgB,CAClBxC,KAAMsC,EAAOtC,KACbQ,OAAQjB,IDrDI,SAACe,EAAImC,GAC7B,IAAMC,EAAM5B,EAAQ6B,OAAR,WAAmBrC,IAE/B,OADgBmB,IAAMmB,IAAIF,EAAKD,GAChBd,MAAK,SAAAkB,GAAG,OAAIA,EAAIhB,SCqDvBiB,CAAaR,EAAOhC,GAAGkC,GAAeb,MAAK,SAAAoB,GACvC,IAAMC,EAASpD,EAAQC,QAAO,SAAAE,GAAM,OAChCA,EAAOO,KAAOyC,EAAezC,MACjCW,EAAW+B,EAAOL,OAAOI,IACzB1B,EAAW,WAAD,OAAY0B,EAAe/C,OACrCkC,YAAW,WACPb,EAAW,MACZ,QAEN4B,OAAM,SAAAC,GACH3B,GAAe,GACfF,EAAW6B,EAAMtB,SAASC,KAAKqB,OAC/BhB,YAAW,WACPb,EAAW,IACXE,GAAe,KAChB,KACHN,EAAWrB,EAAQC,QAAO,SAAAsD,GAAG,OACzBA,EAAI7C,KAAOgC,EAAOhC,eAnD0B,EDnCpCmC,ECoCE,CAClBzC,KAAMV,EACNkB,OAAQjB,GDrCAkC,IAAM2B,KAAKtC,EAAS2B,GACrBd,MAAK,SAAAkB,GAChB,OAAOA,EAAIhB,SCqCgBF,MAAK,SAAA0B,GAC5BC,QAAQC,IAAIF,GACT,OAAQA,IACPpC,EAAWrB,EAAQ+C,OAAOU,IAC1BlC,EAAa,IACbD,EAAW,IACXG,EAAW,SAAD,OAAUgC,EAAarD,OACjCkC,YAAW,WACPb,EAAW,MACZ,SAGV4B,OAAM,SAAAC,GACHI,QAAQC,IAAIL,EAAMtB,SAASC,MAC3BN,GAAe,GACfF,EAAW6B,EAAMtB,SAASC,KAAKqB,OAC/BhB,YAAW,WACPb,EAAW,IACXE,GAAe,KAChB,QD3Da,IAAAkB,GCiHQrD,WApGP,SAAC2C,GACtBb,EAAWa,EAAMC,OAAOvC,QAmGkCJ,aAhGnC,SAAC0C,GACxBZ,EAAaY,EAAMC,OAAOvC,QA+FkEH,QAASA,EAASC,UAAWA,IACzH,yCACA,cAAC,EAAD,CAASK,QAASA,EAASC,OAAQA,EAAQC,aAvB1B,SAACC,GACfqC,OAAOC,QAAP,uCAA+CtC,EAAOC,QDtF/B,SAAAM,GAC9B,IAAMoC,EAAM5B,EAAQ6B,OAAR,WAAmBrC,IAE/B,OADgBmB,IAAM+B,OAAOd,GACdf,MAAK,SAAAkB,GAAG,OAAIA,EAAIY,UCoFvBC,CAAmB3D,EAAOO,IAAIqB,MAAK,SAAA8B,GACnB,MAATA,IACCxC,EAAWrB,EAAQC,QAAO,SAAAsD,GAAG,OACzBA,EAAI7C,KAAOP,EAAOO,OACtBe,EAAW,WAAD,OAAYtB,EAAOC,OAC7BkC,YAAW,WACPb,EAAW,MACZ,gBCxGvBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f997a0d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({change}) => {\n    return (\n        <div>\n            filter shown with <input onChange={change}></input>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    const { add,\n            nameChange, \n            numberChange,\n            newName,\n            newNumber } = props \n    return(\n        <form onSubmit={add}>\n            <div>\n            name: <input onChange={nameChange} value={newName}/>\n            </div>\n            <div>\n            number: <input onChange={numberChange} value={newNumber}/>\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons,filter, deletePerson}) => {\n    return (\n        <div>\n            {persons.filter(person =>\n            person.name.match(new RegExp(filter, 'i'))\n            ).sort((a, b) => a.id - b.id).map(person => \n                <div key= { person.id }>\n                    <p>{person.name} {person.number}</p>\n                    <button onClick={() => deletePerson(person)}>Delete</button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Persons","import './notification.css'\n\nconst Notification = ({ message, err }) => {\n    if (message === '') {\n        return null\n    }\n    return (       \n        <div className={err ? \"error\" : \"success\"}>       \n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nexport const getAllPersons = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data);\n}\n\nexport const createPerson = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(res => {\n        return res.data;\n    })\n}\n\nexport const deletePersonFromDb = id => {\n    const url = baseUrl.concat(`/${id}`);\n    const request = axios.delete(url);\n    return request.then(res => res.status);\n}\n\nexport const updatePerson = (id, newObject) => {\n    const url = baseUrl.concat(`/${id}`);\n    const request = axios.put(url, newObject);\n    return request.then(res => res.data);\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport {createPerson,getAllPersons, deletePersonFromDb, updatePerson} from './services/persons'\n\nconst App = () => {\n    const [ persons, setPersons] = useState([]);\n    const [ newName, setNewName ] = useState('');\n    const [ newNumber, setNewNumber] = useState('');\n    const [ filter, setFilter] = useState('');\n    const [ message, setMessage] = useState('');\n    const [ errorStatus, setErrorStatus ] = useState(false); \n    \n    useEffect(() => {\n        getAllPersons().then(initialNotes => {\n            setPersons(initialNotes);\n        })\n    },[])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    }\n\n    const addPerson = (event) => {\n    event.preventDefault();\n    if(newName==='' || newNumber==='') {\n        setErrorStatus(true);\n        setMessage(\"You must submit both a name and a phonenumber\");\n        setTimeout(() => {\n            setMessage('');\n            setErrorStatus(false);\n        }, 5000)\n    }\n    else if(!persons.some((person) => person.name === newName)) {\n        const personObject =  {\n            name: newName,\n            number: newNumber,\n        }\n        createPerson(personObject).then(returnedData => {\n            console.log(returnedData)\n            if(\"id\" in returnedData ) {\n                setPersons(persons.concat(returnedData));\n                setNewNumber('');\n                setNewName('');\n                setMessage(`Added ${returnedData.name}`);\n                setTimeout(() => {\n                    setMessage('');\n                }, 5000)\n            } \n        })\n        .catch(error => {\n            console.log(error.response.data);\n            setErrorStatus(true);\n            setMessage(error.response.data.error);\n            setTimeout(() => {\n                setMessage('');\n                setErrorStatus(false);\n            }, 5000)\n        })\n    } else {\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n            const oldObj = persons.find(person => person.name === newName);\n            const updatedPerson = {\n                name: oldObj.name,\n                number: newNumber,\n            }\n\n            updatePerson(oldObj.id,updatedPerson).then(returnedPerson => {\n                const newArr = persons.filter(person =>\n                    person.id !== returnedPerson.id);\n                setPersons(newArr.concat(returnedPerson));\n                setMessage(`Updated ${returnedPerson.name}`);\n                setTimeout(() => {\n                    setMessage('');\n                }, 5000)\n            })\n            .catch(error => {\n                setErrorStatus(true);\n                setMessage(error.response.data.error);\n                setTimeout(() => {\n                    setMessage('');\n                    setErrorStatus(false);\n                }, 5000)\n                setPersons(persons.filter(obj =>\n                    obj.id !== oldObj.id))\n            })            \n        }            \n    }\n  }\n\n    const deletePerson = (person) => {\n        if(window.confirm(`Do you really want to delete ${person.name}`)) {\n            deletePersonFromDb(person.id).then(status => {\n                if(status===204) {\n                    setPersons(persons.filter(obj =>\n                        obj.id !== person.id))\n                    setMessage(`Deleted ${person.name}`);\n                    setTimeout(() => {\n                        setMessage('');\n                    }, 5000)\n                }\n            })            \n        }\n    }\n\n  return (\n    <div>\n        <Notification message={message} err={errorStatus}/>\n        <h2>Phonebook</h2>\n        <Filter change={handleFilterChange}/>\n        <h3>Add a new number</h3>\n        <PersonForm add={addPerson} nameChange={handleNameChange} numberChange={handleNumberChange} newName={newName} newNumber={newNumber}/>\n        <h3>Numbers</h3>\n        <Persons persons={persons} filter={filter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}